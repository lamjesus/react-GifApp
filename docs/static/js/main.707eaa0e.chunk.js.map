{"version":3,"sources":["Components/AddCategories.js","helpers/getGifs.js","Components/GifItem.js","Components/GifApi.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategories","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","gifFetch","categoria","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_large","GifItem","className","src","alt","GifApi","loading","state","setstate","useEffect","then","useFetchGif","image","GifExpertApp","categorias","setCategorias","cate","ReactDOM","render","document","getElementById"],"mappings":"qLAGaA,EAAgB,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,uBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAMhB,UACI,iDACA,uBACIO,KAAO,OACPC,MAAST,EACTU,SAnBQ,SAACP,GACjBF,EAAcE,EAAEQ,OAAOF,c,+BCJlBG,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACD,EACbC,EAFc,iDAEkCC,UAAUH,GAF5C,kBACD,EADC,sDAGFI,MAAMF,GAHJ,cAGdG,EAHc,gBAICA,EAAIC,OAJL,uBAIbC,EAJa,EAIbA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAMQ,EAAIG,OAAOC,gBAAgBZ,QATrB,kBAYdM,GAZc,4CAAH,sDCUNO,EAVC,SAAC,GAAoB,IAAnBH,EAAkB,EAAlBA,MAAMV,EAAY,EAAZA,IAAY,EAARS,GAExB,OACI,sBAAKK,UAAU,OAAf,UACI,qBAAKC,IAAOf,EAAKgB,IAAMN,IACvB,4BAAIA,QCwBDO,EA3BA,SAAC,GAAiB,IAAhBnB,EAAe,EAAfA,UAEb,ECLuB,SAACA,GAExB,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAWA,OANAC,qBAAU,WACNxB,EAASC,GAAWwB,MAAK,SAAAd,GAAG,OAAGY,EAAS,CACpCf,KAAMG,EACNU,SAAQ,SAEd,CAACpB,IACIqB,EDRgBI,CAAYzB,GAA5BO,EAAP,EAAOA,KAAKa,EAAZ,EAAYA,QAGZ,OACI,qCACI,6BAAKpB,IACJoB,GAAW,wCAGZ,qBAAKJ,UAAU,OAAf,SAGST,EAAKE,KAAI,SAAAiB,GACN,OAAO,cAAC,EAAD,eACCA,GADeA,EAAMf,aEjBxCgB,EAAe,WAG1B,MAAoCzC,mBAAS,CAAC,QAA9C,mBAAO0C,EAAP,KAAmBC,EAAnB,KAME,OACQ,qCAEE,8CACA,cAAC,EAAD,CAAe5C,cAAiB4C,IAChC,uBAEA,6BAEID,EAAWnB,KAAI,SAAAqB,GACZ,OAAO,cAAC,EAAD,CAAQ9B,UAAa8B,GAAWA,Y,MCf5DC,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.707eaa0e.chunk.js","sourcesContent":["import React,{useState} from 'react'\nimport PropTypes from 'prop-types'\n// COMUNICACION ENTRE COMPONENTES.\nexport const AddCategories = ({setCategories}) => {\n    // ESTADO, siempre se trata del estado.\n    const [inputValue, setinputValue] = useState('')\n    const handleEvent = (e)=>{\n        setinputValue(e.target.value);// pone en el estado lo que se escriba en el input\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();// previene que el navegador se reinicie.\n        // mira que lo que se escriba tenga almenos mas de 2 caracteres \n        if (inputValue.trim().length > 2) {\n          setCategories(cats => [inputValue,...cats]) \n          setinputValue('') \n          \n        }\n        \n    }\n    return (\n        <form onSubmit = {handleSubmit}>\n            <h3>Add Categories.</h3>\n            <input\n                type = 'text'\n                value = {inputValue}\n                onChange = {handleEvent}\n            />\n            \n        </form>\n    )\n}\n\nAddCategories.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","import {gifs} from '../Components/GifApi'\n\n// Traer datos de la API\nexport const gifFetch = async (categoria)=> {\n    const numeroGifs = 3;\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=${numeroGifs}&api_key=DlEmChiB25eXluCFB8S2l97ZsY3FiDOK`\n    const res = await fetch(url);\n    const {data} = await res.json();\n    const gifs = data.map(img => {\n        return{\n            id:img.id,\n            title: img.title,\n            url : img.images.downsized_large.url,\n        }\n    })\n   return gifs;\n   \n}\n","\nimport React from 'react'\n\nconst GifItem = ({title,url,id}) => {\n   \n    return (\n        <div className='card'>\n            <img src = {url} alt ={title}></img>\n            <p>{title}</p>\n        </div>\n    )\n}\n\nexport default GifItem\n","\nimport React from 'react'\nimport { useFetchGif } from '../hooks/useFetchGif'\nimport GifItem from './GifItem';\n\nconst GifApi = ({categoria}) => {    \n    \n    const {data,loading} = useFetchGif(categoria);\n\n    \n    return (\n        <>\n            <h3>{categoria}</h3>\n            {loading && <p>Loading</p>}\n            \n            \n            <div className='grid'>\n                \n                \n                    {data.map(image =>{\n                        return <GifItem key = {image.id} \n                            {...image}\n                        />\n                    })}\n                    \n                \n                \n            </div>\n        </>\n    )\n}\n\nexport default GifApi\n","import {useState,useEffect} from 'react'\nimport  { gifFetch } from '../helpers/getGifs';\nexport const useFetchGif = (categoria) => {\n    \n    const [state, setstate] = useState({\n        data:[],\n        loading: true\n    })\n    \n    useEffect(() => {\n        gifFetch(categoria).then(img =>setstate({\n            data: img,\n            loading:false\n        }))\n    },[categoria])\n    return state;\n\n}\n","import React,{useState} from 'react';\nimport { AddCategories } from './Components/AddCategories';\nimport GifApi from './Components/GifApi';\nexport const GifExpertApp = ()=>{\n   \n //let categorias = ['One Puch Man','DMC','Gantz','Trinity Blood'];\n  const [categorias, setCategorias] = useState(['GOT'])\n    // const HandleSeries = ()=>{\n    //     setCategorias('Samurai X'); estoy convirtiendo el estado de un arrey a un srting\n    //     setCategorias([...categorias,'Yugi Oh']);\n           // setCategorias(cats => [...cats,''])\n    //  }\n    return (\n            <>\n            \n              <h2>GifExpertApp</h2> \n              <AddCategories setCategories = {setCategorias}/> \n              <hr></hr>\n              \n              <ul>\n                {\n                  categorias.map(cate =>{\n                     return <GifApi categoria = {cate} key={cate}/>\n                  })\n                }\n               \n                \n              </ul>\n            </>\n        )\n    \n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}